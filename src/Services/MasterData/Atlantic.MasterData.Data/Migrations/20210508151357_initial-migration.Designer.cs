// <auto-generated />
using System;
using Atlantic.MasterData.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Atlantic.MasterData.Data.Migrations
{
    [DbContext(typeof(MasterDataContext))]
    [Migration("20210508151357_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.BusinessServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<short>("Flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BusinessServices");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<short>("Flag")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateCode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatesId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WikiDataId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StatesId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Capital")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency_symbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emoji")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmojiU")
                        .HasColumnType("TEXT");

                    b.Property<short>("Flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISO2")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISO3")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Native")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phonecode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subregion")
                        .HasColumnType("TEXT");

                    b.Property<string>("TLD")
                        .HasColumnType("TEXT");

                    b.Property<string>("Timezones")
                        .HasColumnType("TEXT");

                    b.Property<string>("Translations")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WikiDataId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.States", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CountriesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FipsCode")
                        .HasColumnType("TEXT");

                    b.Property<short>("Flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISO2")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WikiDataId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.Cities", b =>
                {
                    b.HasOne("Atlantic.MasterData.Domain.Models.States", null)
                        .WithMany("Cities")
                        .HasForeignKey("StatesId");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.States", b =>
                {
                    b.HasOne("Atlantic.MasterData.Domain.Models.Countries", null)
                        .WithMany("States")
                        .HasForeignKey("CountriesId");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.Countries", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("Atlantic.MasterData.Domain.Models.States", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
